// Limpa a interface padrão para organizar o layout
ui.root.clear();

// Define o layout principal para uma disposição horizontal
ui.root.setLayout(ui.Panel.Layout.flow('horizontal'));

// Criar um painel para a interface de usuário
var panel = ui.Panel({
  layout: ui.Panel.Layout.flow('vertical'),
  style: {width: '300px'}
});

// Títulos e descrições
panel.add(ui.Label('Selecione o Período para a Exportação de Imagens'));

// Criando os componentes da interface
var startYear = ui.Textbox({placeholder: 'Ano de Início', style: {width: '100px'}});
var endYear = ui.Textbox({placeholder: 'Ano de Fim', style: {width: '100px'}});

// Painel horizontal para os campos de ano
var yearPanel = ui.Panel({
  widgets: [startYear, ui.Label(' '), endYear],
  layout: ui.Panel.Layout.flow('horizontal'),
  style: {stretch: 'horizontal'}
});
panel.add(yearPanel);

// Lista de meses com checkboxes
var months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 
              'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];
var monthCheckboxes = {};
months.forEach(function(month) {
  monthCheckboxes[month] = ui.Checkbox(month, false);
  panel.add(monthCheckboxes[month]);
});

// Funções para marcar e desmarcar todos os checkboxes
function marcarTodos() {
  months.forEach(function(month) {
    monthCheckboxes[month].setValue(true);
  });
}

function desmarcarTodos() {
  months.forEach(function(month) {
    monthCheckboxes[month].setValue(false);
  });
}

// Botões "Marcar Todos" e "Desmarcar Todos"
var marcarTodosButton = ui.Button('Marcar Todos', marcarTodos);
var desmarcarTodosButton = ui.Button('Desmarcar Todos', desmarcarTodos);

// Painel horizontal para os botões de marcar/desmarcar
var buttonPanel = ui.Panel({
  widgets: [marcarTodosButton, ui.Label(' '), desmarcarTodosButton],
  layout: ui.Panel.Layout.flow('horizontal'),
  style: {stretch: 'horizontal'}
});
panel.add(buttonPanel);

// Adicionando um campo para a entrada do WKT
var wktLabel = ui.Label('Insira a geometria em WKT (ex: polígono)');
var wktTextbox = ui.Textbox({
  placeholder: 'Insira o WKT aqui...',
  style: {width: '200px'}
});
panel.add(wktLabel);
panel.add(wktTextbox);

// Botão para executar o processamento
var runButton = ui.Button('Executar', function() {
  var startY = parseInt(startYear.getValue(), 10);
  var endY = parseInt(endYear.getValue(), 10);
  var wkt = wktTextbox.getValue();

  // Converte o WKT em geometria
  var geojson = JSON.parse(wkt);
  var AOI = ee.Geometry(geojson);

  // Adiciona um buffer de 5 km ao AOI para exportação
  var bufferedAOI = AOI.buffer(5000); 

  // Executar a exportação para cada ano no intervalo
  for (var year = startY; year <= endY; year++) {
    months.forEach(function(month, index) {
      if (monthCheckboxes[month].getValue()) { // Verifica se o mês está selecionado
        var monthIndex = index + 1;
        var img = getBestImage(year, monthIndex, AOI); // Obtém a melhor imagem para o mês
        exportImage(img, year, monthIndex, bufferedAOI); // Exporta a imagem com a área expandida
      }
    });
  }
});
panel.add(runButton);

// Função para obter a melhor imagem de um mês específico
var getBestImage = function(year, month, AOI) {
  var startMonthDate = ee.Date.fromYMD(year, month, 1);
  var endMonthDate = startMonthDate.advance(1, 'month');

  var img = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
    .filterDate(startMonthDate, endMonthDate)
    .filterBounds(AOI)
    .filter(ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE', 10))
    .sort('CLOUDY_PIXEL_PERCENTAGE')
    .first(); 

  if (img) {
    var b2b3b4b8 = img.select(['B4', 'B3', 'B2', 'B8']);
    var b11 = img.select(['B11']).resample('bilinear').reproject({
      crs: b2b3b4b8.projection(),
      scale: 10
    });
    img = b2b3b4b8.addBands(b11);
  }
  return img;
};

// Função para exportar a imagem
var exportImage = function(img, year, month, bufferedAOI) {
  if (img) {
    var OutputName;
    try {
      var imgId = img.get('system:index').getInfo();
      OutputName = 'Sentinel_' + imgId + '_' + year + '_' + ('0' + month).slice(-2);
    } catch (error) {
      OutputName = 'Sentinel_' + year + '_' + ('0' + month).slice(-2);
      print('Aviso: A imagem não possui um sistema de índice válido. Usando data para nome do arquivo:', OutputName);
    }

    print('Nome do arquivo de exportação:', OutputName);

    Export.image.toDrive({
      image: img.toUint16(),
      description: OutputName,
      fileNamePrefix: OutputName,
      region: bufferedAOI, // Define a região de exportação com o buffer
      scale: 10,
      crs: 'EPSG:4326',
      maxPixels: 1e10,
      fileFormat: 'GeoTIFF',
      formatOptions: {
        cloudOptimized: true
      }
    });
  } else {
    print('Nenhuma imagem encontrada para o mês:', month, 'do ano:', year);
  }
};

// Adiciona o painel à esquerda e o mapa ao lado direito
ui.root.widgets().reset([panel, ui.Map()]);
